export declare const RUNTIME_ERROR_PREFIX = "RUNTIME_ERR";
export interface ErrorDescriptor {
    number: number;
    message: string;
    title: string;
    description: string;
}
export declare function getRuntimeErrorCode(error: ErrorDescriptor): string;
export declare const RUNTIME_ERROR_RANGES: {
    TEAL: {
        min: number;
        max: number;
        title: string;
    };
    GENERAL: {
        min: number;
        max: number;
        title: string;
    };
    TRANSACTION: {
        min: number;
        max: number;
        title: string;
    };
    ASA: {
        min: number;
        max: number;
        title: string;
    };
};
export declare const PARSE_ERROR = "Parse Error";
export declare const tealErrors: {
    ASSERT_STACK_LENGTH: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ASSERT_ARR_LENGTH: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_OP_ARG: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_TYPE: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    UINT64_OVERFLOW: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    UINT64_UNDERFLOW: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ZERO_DIV: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    REJECTED_BY_LOGIC: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INDEX_OUT_OF_BOUND: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    TEAL_ENCOUNTERED_ERR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    CONCAT_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    LONG_INPUT_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    SUBSTRING_END_BEFORE_START: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    SUBSTRING_RANGE_BEYOND: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_UINT8: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ASSERT_LENGTH: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_ADDR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    PRAGMA_VERSION_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_BASE64: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_BASE32: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    DECODE_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    UNKOWN_DECODE_TYPE: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_SCHEMA: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    LABEL_NOT_FOUND: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_LABEL: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    UNKNOWN_TRANSACTION_FIELD: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    UNKNOWN_GLOBAL_FIELD: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    UNKNOWN_ASSET_FIELD: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    UNKNOWN_OPCODE: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    MAX_COST_EXCEEDED: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    MAX_LEN_EXCEEDED: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    PRAGMA_NOT_AT_FIRST_LINE: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    SET_BIT_VALUE_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    SET_BIT_INDEX_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    SET_BIT_INDEX_BYTES_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    SCRATCH_EXIST_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    BYTES_LEN_EXCEEDED: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ADDR_NOT_FOUND_IN_TXN_ACCOUNT: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_APP_REFERENCE: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_ASA_REFERENCE: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    CALL_STACK_EMPTY: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    UINT128_OVERFLOW: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    EXP_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    GROUP_INDEX_EXIST_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    EXTRACT_RANGE_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    CURVE_NOT_SUPPORTED: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ITXN_BEGIN_WITHOUT_ITXN_SUBMIT: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ITXN_FIELD_WITHOUT_ITXN_BEGIN: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ITXN_FIELD_ERR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ITXN_SUBMIT_WITHOUT_ITXN_BEGIN: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    NO_INNER_TRANSACTION_AVAILABLE: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ADDR_NOT_VALID: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    LOGS_COUNT_EXCEEDED_THRESHOLD: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    LOGS_LENGTH_EXCEEDED_THRESHOLD: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
};
export declare const runtimeGeneralErrors: {
    LOGIC_SIGNATURE_NOT_FOUND: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    LOGIC_SIGNATURE_VALIDATION_FAILED: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_ROUND: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    MAX_LIMIT_APPS: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_SECRET_KEY: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ACCOUNT_DOES_NOT_EXIST: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    APP_NOT_FOUND: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_APPROVAL_PROGRAM: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_CLEAR_PROGRAM: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_PROGRAM: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    MULTIPLE_FILES_WITH_SAME_NAME_IN_DIR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    FILE_NOT_FOUND_IN_DIR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_TX_ACCOUNTS_LEN: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_APP_ARGS_LEN: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    MAX_REFERENCES_EXCEEDED: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    MAX_INNER_TRANSACTIONS_EXCEEDED: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_AUTH_ACCOUNT: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
};
export declare const transactionErrors: {
    TRANSACTION_TYPE_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INSUFFICIENT_ACCOUNT_BALANCE: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INSUFFICIENT_ACCOUNT_ASSETS: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    INVALID_TRANSACTION_PARAMS: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ASA_NOT_OPTIN: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ACCOUNT_ASSET_FROZEN: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    FEES_NOT_ENOUGH: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
};
export declare const runtimeAsaErrors: {
    PARAM_PARSE_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    PARAM_ERROR_NO_NAMED_OPT_IN_ACCOUNT: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ASSET_NOT_FOUND: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    MAX_LIMIT_ASSETS: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    MANAGER_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    FREEZE_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    CLAWBACK_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    BLANK_ADDRESS_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    ASSET_TOTAL_ERROR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    CANNOT_CLOSE_ASSET_BY_CLAWBACK: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
    CANNOT_CLOSE_ASSET_BY_CREATOR: {
        number: number;
        message: string;
        title: string;
        description: string;
    };
};
export declare const RUNTIME_ERRORS: {
    [category in keyof typeof RUNTIME_ERROR_RANGES]: {
        [errorName: string]: ErrorDescriptor;
    };
};
